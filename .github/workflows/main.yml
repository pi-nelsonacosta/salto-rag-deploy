name: (Develop) Build and deploy Dockerized Python app to Azure Web App Salto Project

on:
  push:
    branches:
      - rag-azure-flask-update
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      # Paso temporal para verificar docker login
      - name: Verify Docker login
        run: docker login ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }} -u ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} -p ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/myapp:latest .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/myapp:latest

      - name: Set environment variables for Azure Web App
        run: |
          echo "AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}" >> $GITHUB_ENV
          echo "AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}" >> $GITHUB_ENV
          echo "AZURE_OPENAI_DEPLOYMENT_NAME=${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}" >> $GITHUB_ENV
          echo "AZURE_AI_SEARCH_ENDPOINT=${{ secrets.AZURE_AI_SEARCH_ENDPOINT }}" >> $GITHUB_ENV
          echo "AZURE_AI_SEARCH_KEY=${{ secrets.AZURE_AI_SEARCH_KEY }}" >> $GITHUB_ENV
          echo "AZURE_AI_SEARCH_INDEX_NAME=${{ secrets.AZURE_AI_SEARCH_INDEX_NAME }}" >> $GITHUB_ENV
          echo "SEMANTIC_CONFIGURATION_NAME=${{ secrets.SEMANTIC_CONFIGURATION_NAME }}" >> $GITHUB_ENV
          echo "COSMOSDB_ENDPOINT=${{ secrets.COSMOSDB_ENDPOINT }}" >> $GITHUB_ENV
          echo "COSMOSDB_PRIMARY_KEY=${{ secrets.COSMOSDB_PRIMARY_KEY }}" >> $GITHUB_ENV
          echo "COSMOS_DB_DATABASE_NAME=${{ secrets.COSMOS_DB_DATABASE_NAME }}" >> $GITHUB_ENV
          echo "COSMOS_DB_CONTAINER_HISTORY=${{ secrets.COSMOS_DB_CONTAINER_HISTORY }}" >> $GITHUB_ENV
          echo "COSMOS_DB_CONTAINER_EVALS=${{ secrets.COSMOS_DB_CONTAINER_EVALS }}" >> $GITHUB_ENV
          echo "FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Deploy to Azure Web App using Docker image
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "apptestingdeploy"
          slot-name: 'Production'
          images: "${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/myapp:latest"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
